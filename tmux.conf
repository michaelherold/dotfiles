# => Preferences {{{
# =====================================================================

# Remaps tmux prefix to Control-a
unbind C-b
set -g prefix C-a

# Have `C-a C-a` sets C-a keypress to the current window
bind C-a send-prefix

# Improve colors
set -g default-terminal "screen-256color"

# Ensure we're using the default shell
set -g default-shell $SHELL

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Faster escape sequences (default is 500ms)
# This helps when existing insert mode in vim: http://superuser.com/a/252717/65504
set -s escape-time 50

# Start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1

# Renumber windows sequentially after closing any of them
set -g renumber-windows on

# increase scrollback lines
set -g history-limit 10000

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# Set the title of the terminal window
set-option -g set-titles on
set-option -g set-titles-string "[tmux:#S] #W"

# Constrain window size to the minimum size of any client connected to
# the window, instead of the minimum size of any client connected to
# the session
setw -g aggressive-resize on

# }}}
# => Status Line {{{
# =====================================================================

# Status bar
set -g status-bg colour8
set -g status-fg colour7

# Current session
set -g status-left " #S "
set -g status-left-length 15
set -g status-left-style 'fg=colour7,bg=colour16'

# Window list
set -g window-status-format "#[fg=colour7] #I #[fg=colour7]#W#[fg=colour19]#F "
set -g window-status-current-format "#[fg=colour7,bg=colour6] #I #[fg=colour7]#W#[fg=colour19]#F "
set -g window-status-separator ""

set -g status-right "#[bg=colour6] %Y-%m-%d %l:%M:%S %p "

# Update the status bar once per second
set -g status-interval 1

# }}}
# => Window Styles {{{
# =====================================================================

# Set unfocused windows to a dark blue background
set-window-option -g window-style "fg=colour15,bg=colour18"

# Set the focused window to the standard grey
set-window-option -g window-active-style "fg=colour7,bg=colour0"

# Emit focus events so vim will recolor when inactive
set -g focus-events on

# }}}
# => Global (Non-Prefixed) Key Bindings {{{
# =====================================================================

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Use 'C-y' to paste clipboard
bind-key -n C-y run "xclip -out | tmux load-buffer - ; tmux paste-buffer"

# }}}
# => Primary (Prefixed) Key Bindings {{{
# =====================================================================

# Have new windows and panes open in the current directory
bind-key - split-window -c "#{pane_current_path}"
bind-key | split-window -c "#{pane_current_path}" -h
bind-key c new-window   -c "#{pane_current_path}"

# Bring back clear screen under tmux prefix
bind-key C-l send-keys "C-l"

# Bring back kill line under tmux prefix
bind-key C-k send-keys "C-k"

# Reload .tmux.conf
bind-key R source-file ~/.tmux.conf

# Vim-style resizing
bind-key -r h resize-pane -L 1
bind-key -r j resize-pane -D 1
bind-key -r k resize-pane -U 1
bind-key -r l resize-pane -R 1

# easily toggle synchronization (mnemonic: e is for echo)
bind-key e setw synchronize-panes on
bind-key E setw synchronize-panes off

# }}}
# => Copy-Mode Key Bindings {{{
# =====================================================================

# Use 'v' to begin selection as in Vim
unbind -T copy-mode-vi v
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

if-shell 'test "$(uname)" != "Darwin"' "source ~/.tmux-linux.conf"
if-shell 'test "$(uname)" = "Darwin"' "source ~/.tmux-macos.conf"

# vim:ft=conf:
# }}}
