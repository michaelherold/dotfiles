#!/usr/bin/env sh

if [ -n "$TMUX" ]; then
  tmux choose-tree -s -O name
  exit
fi

set -euf

if ! command -v tmux >/dev/null; then
  echo "You do not have tmux installed."
  exit 1
fi

set +e
sessions="$(tmux list-sessions -F "#S" 2>/dev/null)"
set -e
number_of_sessions="$(echo "$sessions" | wc -l | tr -d '[:space:]')"
session_name=
index=1

is_integer() {
  case "${1#[+-]}" in
    (*[!0123456789]*) return 1 ;;
    ('')              return 1 ;;
    (*)               return 0 ;;
  esac
}

list_sessions() {
  [ -z "$*" ] && return

  cat <<MSG
Available sessions
------------------

MSG

  old_ifs=$IFS
  IFS='
  '
  for session in "$@"; do
    padding=
    if [ "$number_of_sessions" -gt 9 ] && [ "$index" -lt 10 ]; then
      padding=" "
    fi

    printf "%s%s. %s\n" "$padding" "$index" "$session"
    eval "choice_$index='$session'"
    index=$((index+1))
  done

  IFS=$old_ifs

  echo
}

usage() {
  cat <<MSG
usage: tm [options] [session_name]

Options
  -h, --help
          print this help
MSG

  exit 1
}

while [ "$#" -gt 0 ]; do
  case "$1" in
    -h|--help)
      usage
      ;;
  esac
  shift
done

# shellcheck disable=SC2086
list_sessions $sessions

while :; do
  if [ -n "$sessions" ]; then
    printf "Choose or name your session: "
  else
    printf "Name your session: "
  fi

  [ -z "$session_name" ] && read -r session_name
  echo

  if is_integer "$session_name"; then
    if [ "$session_name" -gt 0 ] && [ "$session_name" -le "$number_of_sessions" ]; then
      session_name=$(eval echo "\$choice_$session_name")
      tmux attach-session -t "$session_name"
      break
    else
      echo "You picked a numerical session name, which isn't supported."
      session_name=
    fi
  else
    [ -z "$session_name" ] && session_name="$(basename "$PWD")"

    if echo "$sessions" | egrep "^$session_name$" >/dev/null; then
      tmux attach-session -t "$session_name"
    else
      tmux new-session -s "$session_name"
    fi
    break
  fi
done
